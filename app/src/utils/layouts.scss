// =====================================================================================================
//   __     __         _       _     _              ___     _____                 _   _                 
//   \ \   / /_ _ _ __(_) __ _| |__ | | ___  ___   ( _ )   |  ___|   _ _ __   ___| |_(_) ___  _ __  ___ 
//    \ \ / / _` | '__| |/ _` | '_ \| |/ _ \/ __|  / _ \/\ | |_ | | | | '_ \ / __| __| |/ _ \| '_ \/ __|
//     \ V / (_| | |  | | (_| | |_) | |  __/\__ \ | (_>  < |  _|| |_| | | | | (__| |_| | (_) | | | \__ \
//      \_/ \__,_|_|  |_|\__,_|_.__/|_|\___||___/  \___/\/ |_|   \__,_|_| |_|\___|\__|_|\___/|_| |_|___///                                                                                                  
// =====================================================================================================

// Stores the width value in pixels of the layout spaces available.
$sizes: (
  hand: 320px,
  page: 600px,
  book: 900px,
  desk: 1200px,
  wide: 1800px
);

// -----------------------------------------------------------------------------------------------------
// get-width()
// -----------------------------------------------------------------------------------------------------
// Looks for a specific space's width and returns the correct value.
// * $space-name: One of the five spaces that are used in the standard: (hand, page, book, desk, wide).
@function get-width($space-name) {
  @if(map-has-key($map: $sizes, $key: $space-name)) {
    @return map-get($map: $sizes, $key: $space-name);
  }
}

// =====================================================================================================
//    __  __ _      _           
//   |  \/  (_)_  _(_)_ __  ___ 
//   | |\/| | \ \/ / | '_ \/ __|
//   | |  | | |>  <| | | | \__ \
//   |_|  |_|_/_/\_\_|_| |_|___/
//                             
// =====================================================================================================
// -----------------------------------------------------------------------------------------------------
// display()
// -----------------------------------------------------------------------------------------------------
// Creates the corect media query according to a size range input.
// * $from: Lower range limit for the media query.
// * $until: Higher range limit for the media query.
@mixin display($from, $until) {
  display: none;
}

// -----------------------------------------------------------------------------------------------------
// display()
// -----------------------------------------------------------------------------------------------------
// Sets the correct grid attributes depending on the amount of columns and offset spaces.
// * $columns: Amount of columns, can only be 4, 8 or 12.
// * $offset-multiplier: This number multiplied by 24px will become the gridâ€™s margin and offset.
@mixin grid($columns, $offset-multiplier) {
  display: none;
}
